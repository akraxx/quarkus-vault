name: Database
category: secrets

operations:

- name: configureConnection
  method: POST
  path: config/:connectionName
  parameters:
  - name: connectionName
    type: String
  - name: params
    body: true
    type: $ConfigParams


- name: readConnection
  method: GET
  path: config/:connectionName
  parameters:
  - name: connectionName
    type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $ReadConnectionResultData


- name: listConnections
  method: GET
  path: config
  result:
    kind: leased
    unwrapUsing: r.getData().getKeys()
    unwrappedType: java.util.List<String>
    data:
    - name: keys
      type: java.util.List<String>


- name: deleteConnection
  method: DELETE
  path: config/:connectionName
  parameters:
  - name: connectionName
    type: String


- name: resetConnection
  method: POST
  path: reset/:connectionName
  parameters:
  - name: connectionName
    type: String


- name: rotateRootCredentials
  method: POST
  path: rotate-root/:connectionName
  parameters:
  - name: connectionName
    type: String


- name: updateRole
  method: POST
  path: roles/:roleName
  parameters:
  - name: roleName
    type: String
  - name: params
    body: true
    object:
    - name: dbName
      type: String
      required: true
    - name: defaultTtl
      type: java.time.Duration
    - name: maxTtl
      type: java.time.Duration
    - name: creationStatements
      type: java.util.List<String>
    - name: revocationStatements
      type: java.util.List<String>
    - name: rollbackStatements
      type: java.util.List<String>
    - name: renewStatements
      type: java.util.List<String>
    - name: credentialType
      type: $CredentialType
    - name: credentialConfig
      type: $CredentialConfig
      annotations:
        - type: com.fasterxml.jackson.annotation.JsonTypeInfo
          members:
            use:
              format: $id:T.NAME
              arguments:
                id: <type>com.fasterxml.jackson.annotation.JsonTypeInfo.Id
            property:
              format: $name:S
              arguments:
                name: credential_type


- name: readRole
  method: GET
  path: roles/:roleName
  parameters:
  - name: roleName
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
      - name: dbName
        type: String
      - name: defaultTtl
        type: java.time.Duration
      - name: maxTtl
        type: java.time.Duration
      - name: creationStatements
        type: java.util.List<String>
      - name: revocationStatements
        type: java.util.List<String>
      - name: rollbackStatements
        type: java.util.List<String>
      - name: renewStatements
        type: java.util.List<String>
      - name: credentialType
        type: $CredentialType
      - name: credentialConfig
        type: $CredentialConfig
        annotations:
        - type: com.fasterxml.jackson.annotation.JsonTypeInfo
          members:
            include:
              format: $as:T.EXTERNAL_PROPERTY
              arguments:
                as: <type>com.fasterxml.jackson.annotation.JsonTypeInfo.As
            use:
              format: $id:T.NAME
              arguments:
                id: <type>com.fasterxml.jackson.annotation.JsonTypeInfo.Id
            property:
              format: $name:S
              arguments:
                name: credential_type


- name: listRoles
  method: LIST
  path: roles
  result:
    kind: leased
    unwrapUsing: r.getData().getKeys()
    unwrappedType: java.util.List<String>
    data:
    - name: keys
      type: java.util.List<String>


- name: deleteRole
  method: DELETE
  path: roles/:roleName
  parameters:
  - name: roleName
    type: String


- name: generateCredentials
  method: GET
  path: creds/:roleName
  parameters:
  - name: roleName
    type: String
  result:
    kind: leased
    dataType: java.util.Map<String, Object>


- name: updateStaticRole
  method: POST
  path: static-roles/:roleName
  parameters:
  - name: roleName
    type: String
  - name: params
    body: true
    object:
    - name: username
      type: String
      required: true
    - name: dbName
      type: String
      required: true
    - name: rotationPeriod
      type: java.time.Duration
    - name: rotationSchedule
      type: String
    - name: rotationWindow
      type: java.time.Duration
    - name: rotationStatements
      type: java.util.List<String>
    - name: credentialType
      type: $CredentialType
    - name: credentialConfig
      type: $CredentialConfig
      annotations:
      - type: com.fasterxml.jackson.annotation.JsonTypeInfo
        members:
          use:
            format: $id:T.NAME
            arguments:
              id: <type>com.fasterxml.jackson.annotation.JsonTypeInfo.Id
          property:
            format: $name:S
            arguments:
              name: credential_type


- name: readStaticRole
  method: GET
  path: static-roles/:roleName
  parameters:
  - name: roleName
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: username
      type: String
      required: true
    - name: dbName
      type: String
      required: true
    - name: rotationPeriod
      type: java.time.Duration
    - name: rotationSchedule
      type: String
    - name: rotationWindow
      type: java.time.Duration
    - name: rotationStatements
      type: java.util.List<String>
    - name: credentialType
      type: $CredentialType
    - name: credentialConfig
      type: $CredentialConfig
      annotations:
      - type: com.fasterxml.jackson.annotation.JsonTypeInfo
        members:
          use:
            format: $id:T.NAME
            arguments:
              id: <type>com.fasterxml.jackson.annotation.JsonTypeInfo.Id
          property:
            format: $name:S
            arguments:
              name: credential_type


- name: listStaticRoles
  method: LIST
  path: static-roles
  result:
    kind: leased
    unwrapUsing: r.getData().getKeys()
    unwrappedType: java.util.List<String>
    data:
    - name: keys
      type: java.util.List<String>


- name: deleteStaticRole
  method: DELETE
  path: static-roles/:roleName
  parameters:
  - name: roleName
    type: String


- name: generateStaticRoleCredentials
  method: GET
  path: static-creds/:roleName
  parameters:
  - name: roleName
    type: String
  result:
    kind: leased
    dataType: java.util.Map<String, Object>


- name: rotateStaticCredentials
  method: POST
  path: rotate-role/:roleName
  parameters:
  - name: roleName
    type: String


types:

- name: ConfigParams
  properties:
  - name: pluginName
    type: String
    required: true
  - name: pluginVersion
    type: String
    required: true
  - name: verifyConnection
    type: Boolean
  - name: allowedRoles
    type: java.util.List<String>
  - name: otherProperties
    type: java.util.Map<String, Object>
    annotations:
    - type: com.fasterxml.jackson.annotation.JsonAnyGetter
    - type: com.fasterxml.jackson.annotation.JsonAnySetter
  methods:
  - name: addProperty
    returnType: $ConfigParams
    parameters:
      key: String
      value: Object
    body: |
      if (otherProperties == null) {
        otherProperties = new $map:T<>();
      }
      otherProperties.put(key, value);
      return this;
    bodyArguments:
      map: <type>java.util.HashMap

- name: ReadConnectionResultData
  properties:
  - name: allowedRoles
    type: java.util.List<String>
  - name: pluginName
    type: String
  - name: pluginVersion
    type: String
  - name: rootCredentialsRotateStatements
    type: java.util.List<String>
  - name: connectionDetails
    type: $ConnectionDetails
  - name: passwordPolicy
    type: String
  methods:
  - name: getConnectionDetails
    typeParameters: [T extends $ConnectionDetails]
    returnType: T
    parameters:
      type: Class<T>
    body: |
      return $mapping:T.convert(connectionDetails, type);
    bodyArguments:
      mapping: <type>io.quarkus.vault.client.json.JsonMapping


- name: ConnectionDetails
  properties:
  - name: connectionUrl
    type: String
  - name: username
    type: String
  - name: otherProperties
    type: java.util.Map<String, Object>
    annotations:
    - type: com.fasterxml.jackson.annotation.JsonAnyGetter
    - type: com.fasterxml.jackson.annotation.JsonAnySetter


enums:

- name: CredentialType
  values:
  - password
  - rsa_private_key
  - client_certificate
