name: RabbitMQ
category: secrets

operations:

- name: configureConnection
  method: POST
  status: NO_CONTENT
  path: config/connection
  parameters:
  - name: params
    body: true
    object:
    - name: connectionUri
      type: String
    - name: username
      type: String
    - name: password
      type: String
    - name: verifyConnection
      type: Boolean
    - name: passwordPolicy
      type: String
    - name: usernameTemplate
      type: String


- name: configureLease
  method: POST
  status: NO_CONTENT
  path: config/lease
  bodyFrom: [ttl, maxTtl]
  parameters:
  - name: ttl
    type: java.time.Duration
  - name: maxTtl
    type: java.time.Duration


- name: readLeaseConfig
  method: GET
  path: config/lease
  result:
    kind: leased
    unwrapData: true
    data:
    - name: ttl
      type: java.time.Duration
    - name: maxTtl
      type: java.time.Duration


- name: updateRole
  method: POST
  status: NO_CONTENT
  path: roles/:roleName
  bodyFrom: [tags, vhosts, vhostTopics]
  parameters:
  - name: roleName
    type: String
  - name: tags
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
    - type: com.fasterxml.jackson.databind.annotation.JsonDeserialize
      members:
        using:
          format: $deserializer:T.class
          arguments:
            deserializer: <type>io.quarkus.vault.client.json.CommaStringToListDeserializer
  - name: vhosts
    type: $VHosts
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ObjectToStringSerializer
  - name: vhostTopics
    type: java.util.Map<String, $VHosts>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ObjectToStringSerializer


- name: readRole
  method: GET
  path: roles/:roleName
  parameters:
  - name: roleName
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: tags
      type: java.util.List<String>
      annotations:
      - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
        members:
          using:
            format: $serializer:T.class
            arguments:
              serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
      - type: com.fasterxml.jackson.databind.annotation.JsonDeserialize
        members:
          using:
            format: $deserializer:T.class
            arguments:
              deserializer: <type>io.quarkus.vault.client.json.CommaStringToListDeserializer
    - name: vhosts
      type: $VHosts
    - name: vhostTopics
      type: java.util.Map<String, $VHosts>


- name: deleteRole
  method: DELETE
  path: roles/:roleName
  parameters:
  - name: roleName
    type: String


- name: generateCredentials
  method: GET
  path: creds/:roleName
  parameters:
  - name: roleName
    type: String
  result:
    kind: leased
    data:
    - name: username
      type: String
    - name: password
      type: String



types:

- name: VHosts
  properties:
  - name: vhosts
    type: java.util.Map<String, $Permissions>
    annotations:
    - type: com.fasterxml.jackson.annotation.JsonValue
  methods:
  - name: constructor
    returnType: void
    parameters:
      vhosts: java.util.Map<String, $Permissions>
    annotations:
    - type: com.fasterxml.jackson.annotation.JsonCreator
    body: |
      this.vhosts = vhosts;
  - name: constructor
    returnType: void
    parameters:
    annotations:
    - type: com.fasterxml.jackson.annotation.JsonCreator
    body: |
      this.vhosts = new $map:T<>();
    bodyArguments:
      map: <type>java.util.HashMap
  - name: add
    returnType: $VHosts
    parameters:
      vhost: String
      configure: String
      write: String
      read: String
    body: |
      this.vhosts.put(vhost, new $perms:T()
        .setConfigure(configure)
        .setWrite(write)
        .setRead(read));
      return this;
    bodyArguments:
      perms: <type>$Permissions


- name: Permissions
  properties:
  - name: configure
    type: String
  - name: write
    type: String
  - name: read
    type: String
