name: PKI
category: secrets

operations:

- name: configUrls
  method: POST
  path: config/urls
  parameters:
  - name: params
    body: true
    object:
    - name: issuingCertificates
      type: java.util.List<String>
    - name: crlDistributionPoints
      type: java.util.List<String>
    - name: ocspServers
      type: java.util.List<String>
    - name: enableTemplating
      type: Boolean


- name: readUrlsConfig
  method: GET
  path: config/urls
  result:
    kind: leased
    unwrapData: true
    data:
    - name: issuingCertificates
      type: java.util.List<String>
    - name: crlDistributionPoints
      type: java.util.List<String>
    - name: ocspServers
      type: java.util.List<String>
    - name: enableTemplating
      type: Boolean


- name: configIssuers
  method: POST
  path: config/issuers
  bodyFrom: [defaultIssuer, defaultFollowsLatestIssuer]
  parameters:
  - name: defaultIssuer
    serializedName: default
    type: String
  - name: defaultFollowsLatestIssuer
    type: Boolean
  result:
    kind: leased
    unwrapData: true
    data:
    - name: defaultIssuer
      serializedName: default
      type: String
    - name: defaultFollowsLatestIssuer
      type: Boolean


- name: readIssuersConfig
  method: GET
  path: config/issuers
  result:
    kind: leased
    unwrapData: true
    data:
    - name: defaultIssuer
      serializedName: default
      type: String
    - name: defaultFollowsLatestIssuer
      type: Boolean


- name: configKeys
  method: POST
  path: config/keys
  bodyFrom: [defaultKey]
  parameters:
  - name: defaultKey
    serializedName: default
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: defaultKey
      serializedName: default
      type: String


- name: readKeysConfig
  method: GET
  path: config/keys
  result:
    kind: leased
    unwrapData: true
    data:
      - name: defaultKey
        serializedName: default
        type: String


- name: configCluster
  method: POST
  path: config/cluster
  bodyFrom: [path, aiaPath]
  parameters:
  - name: path
    type: String
  - name: aiaPath
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: path
      type: String
    - name: aiaPath
      type: String


- name: readClusterConfig
  method: GET
  path: config/cluster
  result:
    kind: leased
    unwrapData: true
    data:
      - name: path
        type: String
      - name: aiaPath
        type: String


- name: configCrl
  method: POST
  path: config/crl
  parameters:
  - name: params
    body: true
    object:
    - name: expiry
      type: java.time.Duration
    - name: disable
      type: Boolean
    - name: ocspDisable
      type: Boolean
    - name: ocspExpiry
      type: java.time.Duration
    - name: autoRebuild
      type: Boolean
    - name: autoRebuildGracePeriod
      type: java.time.Duration
    - name: enableDelta
      type: Boolean
    - name: deltaRebuildInterval
      type: java.time.Duration
    - name: crossClusterRevocation
      type: Boolean
    - name: unifiedCrl
      type: Boolean
    - name: unifiedCrlOnExistingPaths
      type: Boolean


- name: readCrlConfig
  method: GET
  path: config/crl
  result:
    kind: leased
    unwrapData: true
    data:
      - name: disable
        type: Boolean
      - name: expiry
        type: java.time.Duration
      - name: ocspDisable
        type: Boolean
      - name: ocspExpiry
        type: java.time.Duration
      - name: autoRebuild
        type: Boolean
      - name: autoRebuildGracePeriod
        type: java.time.Duration
      - name: enableDelta
        type: Boolean
      - name: deltaRebuildInterval
        type: java.time.Duration
      - name: crossClusterRevocation
        type: Boolean
      - name: unifiedCrl
        type: Boolean
      - name: unifiedCrlOnExistingPaths
        type: Boolean


- name: rotateCrl
  method: GET
  path: crl/rotate
  result:
    kind: leased
    unwrapData: true
    data:
    - name: success
      type: Boolean


- name: rotateDeltaCrl
  method: GET
  path: crl/rotate
  result:
    kind: leased
    unwrapData: true
    data:
      - name: success
        type: Boolean


- name: listRoles
  method: GET
  path: roles
  result:
    kind: leased
    unwrapData: true
    data:
    - name: keys
      type: java.util.List<String>


- name: readRole
  method: GET
  path: roles/:roleName
  parameters:
  - name: roleName
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: issuerRef
      type: String
    - name: ttl
      type: java.time.Duration
    - name: maxTtl
      type: java.time.Duration
    - name: allowLocalhost
      type: Boolean
    - name: allowedDomains
      type: java.util.List<String>
    - name: allowedDomainsTemplate
      type: Boolean
    - name: allowBareDomains
      type: Boolean
    - name: allowSubdomains
      type: Boolean
    - name: allowGlobDomains
      type: Boolean
    - name: allowWildcardCertificates
      type: Boolean
    - name: allowAnyName
      type: Boolean
    - name: enforceHostnames
      type: Boolean
    - name: allowIpSans
      type: Boolean
    - name: allowedUriSans
      type: java.util.List<String>
      annotations:
      - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
        members:
          using:
            format: $serializer:T.class
            arguments:
              serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
    - name: allowedUriSansTemplate
      type: Boolean
    - name: allowedOtherSans
      type: java.util.List<String>
      annotations:
      - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
        members:
          using:
            format: $serializer:T.class
            arguments:
              serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
    - name: allowedSerialNumbers
      type: java.util.List<String>
      annotations:
      - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
        members:
          using:
            format: $serializer:T.class
            arguments:
              serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
    - name: serverFlag
      type: Boolean
    - name: clientFlag
      type: Boolean
    - name: codeSigningFlag
      type: Boolean
    - name: emailProtectionFlag
      type: Boolean
    - name: keyType
      type: $KeyType
    - name: keyBits
      type: $KeyBits
    - name: signatureBits
      type: $SignatureBits
    - name: usePss
      type: Boolean
    - name: keyUsage
      type: java.util.List<$KeyUsage>
    - name: extKeyUsage
      type: java.util.List<$ExtKeyUsage>
    - name: extKeyUsageOids
      type: java.util.List<String>
    - name: useCsrCommonName
      type: Boolean
    - name: useCsrSans
      type: Boolean
    - name: ou
      type: java.util.List<String>
    - name: organization
      type: java.util.List<String>
    - name: country
      type: java.util.List<String>
    - name: locality
      type: java.util.List<String>
    - name: province
      type: java.util.List<String>
    - name: streetAddress
      type: java.util.List<String>
    - name: postalCode
      type: java.util.List<String>
    - name: generateLease
      type: Boolean
    - name: noStore
      type: Boolean
    - name: requireCn
      type: Boolean
    - name: policyIdentifiers
      type: java.util.List<String>
    - name: basicConstraintsValidForNonCa
      type: Boolean
    - name: notBefore
      serializedName: notBeforeDuration
      type: java.time.Duration
    - name: notAfter
      type: java.time.OffsetDateTime
    - name: cnValidations
      type: java.util.List<$CommonNameValidation>
    - name: allowedUserIds
      type: java.util.List<String>


- name: updateRole
  method: POST
  path: roles/:roleName
  parameters:
  - name: roleName
    type: String
  - name: params
    body: true
    object:
    - name: issuerRef
      type: String
    - name: ttl
      type: java.time.Duration
    - name: maxTtl
      type: java.time.Duration
    - name: allowLocalhost
      type: Boolean
    - name: allowedDomains
      type: java.util.List<String>
    - name: allowedDomainsTemplate
      type: Boolean
    - name: allowBareDomains
      type: Boolean
    - name: allowSubdomains
      type: Boolean
    - name: allowGlobDomains
      type: Boolean
    - name: allowWildcardCertificates
      type: Boolean
    - name: allowAnyName
      type: Boolean
    - name: enforceHostnames
      type: Boolean
    - name: allowIpSans
      type: Boolean
    - name: allowedUriSans
      type: java.util.List<String>
      annotations:
      - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
        members:
          using:
            format: $serializer:T.class
            arguments:
              serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
    - name: allowedUriSansTemplate
      type: Boolean
    - name: allowedOtherSans
      type: java.util.List<String>
      annotations:
      - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
        members:
          using:
            format: $serializer:T.class
            arguments:
              serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
    - name: allowedSerialNumbers
      type: java.util.List<String>
      annotations:
      - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
        members:
          using:
            format: $serializer:T.class
            arguments:
              serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
    - name: serverFlag
      type: Boolean
    - name: clientFlag
      type: Boolean
    - name: codeSigningFlag
      type: Boolean
    - name: emailProtectionFlag
      type: Boolean
    - name: keyType
      type: $KeyType
    - name: keyBits
      type: $KeyBits
    - name: signatureBits
      type: $SignatureBits
    - name: usePss
      type: Boolean
    - name: keyUsage
      type: java.util.List<$KeyUsage>
    - name: extKeyUsage
      type: java.util.List<$ExtKeyUsage>
    - name: extKeyUsageOids
      type: java.util.List<String>
    - name: useCsrCommonName
      type: Boolean
    - name: useCsrSans
      type: Boolean
    - name: ou
      type: java.util.List<String>
    - name: organization
      type: java.util.List<String>
    - name: country
      type: java.util.List<String>
    - name: locality
      type: java.util.List<String>
    - name: province
      type: java.util.List<String>
    - name: streetAddress
      type: java.util.List<String>
    - name: postalCode
      type: java.util.List<String>
    - name: generateLease
      type: Boolean
    - name: noStore
      type: Boolean
    - name: requireCn
      type: Boolean
    - name: policyIdentifiers
      type: java.util.List<String>
    - name: basicConstraintsValidForNonCa
      type: Boolean
    - name: notBefore
      serializedName: notBeforeDuration
      type: java.time.Duration
    - name: notAfter
      type: java.time.OffsetDateTime
    - name: cnValidations
      type: java.util.List<$CommonNameValidation>
    - name: allowedUserIds
      type: java.util.List<String>


- name: deleteRole
  method: DELETE
  path: roles/:roleName
  parameters:
  - name: roleName
    type: String


- name: issue
  method: POST
  path: issue/:roleName
  parameters:
  - name: roleName
    type: String
  - name: params
    body: true
    type: $IssueParams
  result:
    kind: leased
    unwrapData: true
    dataType: $IssueResultData

- name: issue
  method: POST
  path: issuer/:issuerRef/issue/:roleName
  parameters:
  - name: issuerRef
    type: String
  - name: roleName
    type: String
  - name: params
    body: true
    type: $IssueParams
  result:
    kind: leased
    unwrapData: true
    dataType: $IssueResultData


- name: sign
  method: POST
  path: sign/:roleName
  parameters:
  - name: roleName
    type: String
  - name: params
    body: true
    type: $SignParams
  result:
    kind: leased
    unwrapData: true
    dataType: $SignResultData

- name: sign
  method: POST
  path: issuer/:issuerRef/sign/:roleName
  parameters:
  - name: issuerRef
    type: String
  - name: roleName
    type: String
  - name: params
    body: true
    type: $SignParams
  result:
    kind: leased
    unwrapData: true
    dataType: $SignResultData


- name: signIntermediate
  method: POST
  path: root/sign-intermediate
  parameters:
  - name: params
    body: true
    type: $SignIntermediateParams
  result:
    kind: leased
    unwrapData: true
    dataType: $SignResultData

- name: signIntermediate
  method: POST
  path: issuer/:issuerRef/sign-intermediate
  parameters:
  - name: issuerRef
    type: String
  - name: params
    body: true
    type: $SignIntermediateParams
  result:
    kind: leased
    unwrapData: true
    dataType: $SignResultData


- name: signSelfIssued
  method: POST
  path: root/sign-self-issued
  bodyFrom: [certificate, requireMatchingCertificateAlgorithms]
  parameters:
  - name: certificate
    type: String
  - name: requireMatchingCertificateAlgorithms
    type: Boolean
  result:
    kind: leased
    unwrapData: true
    data:
    - name: certificate
      type: String
    - name: issuingCa
      type: String


- name: signSelfIssued
  method: POST
  path: issuer/:issuerRef/sign-self-issued
  bodyFrom: [certificate, requireMatchingCertificateAlgorithms]
  parameters:
  - name: issuerRef
    type: String
  - name: certificate
    type: String
  - name: requireMatchingCertificateAlgorithms
    type: Boolean
  result:
    kind: leased
    unwrapData: true
    data:
    - name: certificate
      type: String
    - name: issuingCa
      type: String


- name: signVerbatim
  method: POST
  path: sign-verbatim/:roleName
  parameters:
  - name: roleName
    type: String
  - name: params
    body: true
    type: $SignVerbatimParams
  result:
    kind: leased
    unwrapData: true
    dataType: $SignResultData


- name: signVerbatim
  method: POST
  path: issuer/:issuerRef/sign-verbatim/:roleName
  parameters:
  - name: issuerRef
    type: String
  - name: roleName
    type: String
  - name: params
    body: true
    type: $SignVerbatimParams
  result:
    kind: leased
    unwrapData: true
    dataType: $SignResultData


- name: revoke
  method: POST
  path: revoke
  parameters:
  - name: params
    body: true
    object:
    - name: serialNumber
      type: String
    - name: certificate
      type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: revocationTime
      type: java.time.OffsetDateTime


- name: revokeWithKey
  method: POST
  path: revoke-with-key
  parameters:
  - name: params
    body: true
    object:
    - name: privateKey
      type: String
      required: true
    - name: serialNumber
      type: String
    - name: certificate
      type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: revocationTime
      type: java.time.OffsetDateTime


- name: listRevoked
  method: LIST
  path: certs/revoked
  result:
    kind: leased
    unwrapUsing: r.getData().getKeys()
    unwrappedType: java.util.List<String>
    data:
    - name: keys
      type: java.util.List<String>


- name: listIssuers
  method: LIST
  path: issuers
  result:
    kind: leased
    unwrapData: true
    data:
    - name: keys
      type: java.util.List<String>
    - name: keyInfo
      type: java.util.Map<String, $KeyInfo>
  recoverNotFound:
    using: new $T().setKeys($T.of()).setKeyInfo($T.of())
    arguments:
    - <type>$ListIssuersResultData
    - <type>java.util.List
    - <type>java.util.Map


- name: readIssuerCaCert
  method: GET
  path: cert/ca
  result:
    kind: leased
    unwrapData: true
    data:
    - name: certificate
      type: String
    - name: caChain
      type: java.util.List<String>
    - name: revocationTime
      type: java.time.OffsetDateTime


- name: readIssuerCaCert
  method: GET
  path: issuer/:issuerRef/json
  parameters:
  - name: issuerRef
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: certificate
      type: String
    - name: caChain
      type: java.util.List<String>
    - name: revocationTime
      type: java.time.OffsetDateTime


- name: readIssuerCaChain
  method: GET
  path: cert/ca_chain
  result:
    kind: leased
    unwrapUsing: r.getData().getCaChain()
    unwrappedType: String
    data:
    - name: caChain
      type: String


- name: readIssuerCrl
  method: GET
  path: cert/crl
  result:
    kind: leased
    unwrapUsing: r.getData().getCertificate()
    unwrappedType: String
    data:
    - name: certificate
      type: String
    - name: crl
      type: String


- name: readIssuerCrl
  method: GET
  path: issuer/:issuerRef/crl
  parameters:
  - name: issuerRef
    type: String
  result:
    kind: leased
    unwrapUsing: r.getData().getCrl()
    unwrappedType: String
    data:
    - name: certificate
      type: String
    - name: crl
      type: String


- name: readIssuerDeltaCrl
  method: GET
  path: cert/delta-crl
  result:
    kind: leased
    unwrapUsing: r.getData().getCertificate()
    unwrappedType: String
    data:
    - name: certificate
      type: String
    - name: crl
      type: String


- name: readIssuerDeltaCrl
  method: GET
  path: issuer/:issuerRef/crl/delta
  parameters:
  - name: issuerRef
    type: String
  result:
    kind: leased
    unwrapUsing: r.getData().getCrl()
    unwrappedType: String
    data:
    - name: certificate
      type: String
    - name: crl
      type: String


- name: readIssuerUnifiedCrl
  method: GET
  path: cert/unified-crl
  result:
    kind: leased
    unwrapUsing: r.getData().getCertificate()
    unwrappedType: String
    data:
    - name: certificate
      type: String
    - name: crl
      type: String


- name: readIssuerUnifiedCrl
  method: GET
  path: issuer/:issuerRef/unified-crl
  parameters:
  - name: issuerRef
    type: String
  result:
    kind: leased
    unwrapUsing: r.getData().getCrl()
    unwrappedType: String
    data:
    - name: certificate
      type: String
    - name: crl
      type: String


- name: readIssuerUnifiedDeltaCrl
  method: GET
  path: cert/unified-delta-crl
  result:
    kind: leased
    unwrapUsing: r.getData().getCertificate()
    unwrappedType: String
    data:
    - name: certificate
      type: String
    - name: crl
      type: String


- name: readIssuerUnifiedDeltaCrl
  method: GET
  path: issuer/:issuerRef/unified-crl/delta
  parameters:
  - name: issuerRef
    type: String
  result:
    kind: leased
    unwrapUsing: r.getData().getCrl()
    unwrappedType: String
    data:
    - name: certificate
      type: String
    - name: crl
      type: String


- name: listCertificates
  method: LIST
  path: certs
  result:
    kind: leased
    unwrapUsing: r.getData().getKeys()
    unwrappedType: java.util.List<String>
    data:
    - name: keys
      type: java.util.List<String>


- name: readCertificate
  method: GET
  path: cert/:serialNumber
  parameters:
  - name: serialNumber
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: certificate
      type: String
    - name: caChain
      type: java.util.List<String>
    - name: revocationTime
      serializedName: revocation_time_rfc3339
      type: java.time.OffsetDateTime
      annotations:
      - type: com.fasterxml.jackson.annotation.JsonAlias
        members:
          value:
            format: $name:S
            arguments:
              name: revocation_time
    - name: issuerId
      type: String


- name: generateRoot
  method: POST
  path: root/generate/:type
  parameters:
  - name: type
    type: $ManageType
  - name: params
    body: true
    type: $GenerateRootParams
  result:
    kind: leased
    unwrapData: true
    dataType: $GenerateRootResultData


- name: generateIssuerRoot
  method: POST
  path: issuers/generate/root/:type
  parameters:
  - name: type
    type: $ManageType
  - name: params
    body: true
    type: $GenerateRootParams
  result:
    kind: leased
    unwrapData: true
    dataType: $GenerateRootResultData


- name: rotateRoot
  method: POST
  path: root/rotate/:type
  parameters:
    - name: type
      type: $ManageType
    - name: params
      body: true
      type: $GenerateRootParams
  result:
    kind: leased
    unwrapData: true
    dataType: $GenerateRootResultData


- name: generateIntermediateCsr
  method: POST
  path: intermediate/generate/:type
  parameters:
  - name: type
    type: $ManageType
  - name: params
    body: true
    type: $GenerateCsrParams
  result:
    kind: leased
    unwrapData: true
    dataType: $GenerateCsrResultData


- name: generateIssuerIntermediateCsr
  method: POST
  path: issuers/generate/intermediate/:type
  parameters:
  - name: type
    type: $ManageType
  - name: params
    body: true
    type: $GenerateCsrParams
  result:
    kind: leased
    unwrapData: true
    dataType: $GenerateCsrResultData


- name: generateCrossSignCsr
  method: POST
  path: intermediate/cross-sign
  parameters:
  - name: params
    body: true
    type: $GenerateCsrParams
  result:
    kind: leased
    unwrapData: true
    dataType: $GenerateCsrResultData


- name: setSignedIntermediate
  method: POST
  path: intermediate/set-signed
  bodyFrom: [certificate]
  parameters:
  - name: certificate
    type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $ImportResultData


- name: configCa
  method: POST
  path: config/ca
  bodyFrom: [pemBundle]
  parameters:
  - name: pemBundle
    type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $ImportResultData


- name: importIssuerBundle
  method: POST
  path: issuers/import/bundle
  bodyFrom: [pemBundle]
  parameters:
  - name: pemBundle
    type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $ImportResultData


- name: importIssuerCertificate
  method: POST
  path: issuers/import/cert
  bodyFrom: [pemBundle]
  parameters:
  - name: pemBundle
    type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $ImportResultData


- name: revokeIssuer
  method: POST
  path: issuer/:issuerRef/revoke
  parameters:
  - name: issuerRef
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: caChain
      type: java.util.List<String>
    - name: certificate
      type: String
    - name: issuerId
      type: String
    - name: issuerName
      type: String
    - name: keyId
      type: String
    - name: leafNotAfterBehavior
      type: String
    - name: manualChain
      type: String
    - name: usage
      type: String
    - name: revocationTime
      type: java.time.OffsetDateTime


- name: deleteIssuer
  method: DELETE
  path: issuer/:issuerRef
  parameters:
  - name: issuerRef
    type: String


- name: listKeys
  method: LIST
  path: keys
  result:
    kind: leased
    unwrapData: true
    data:
    - name: keys
      type: java.util.List<String>
    - name: keyInfo
      type: java.util.Map<String, $KeyInfo>
  recoverNotFound:
    using: new $T().setKeys($T.of()).setKeyInfo($T.of())
    arguments:
    - <type>$ListKeysResultData
    - <type>java.util.List
    - <type>java.util.Map


- name: generateKey
  method: POST
  path: keys/generate/:type
  parameters:
  - name: type
    type: $ManageType
  - name: params
    body: true
    object:
    - name: keyName
      type: String
    - name: keyType
      type: $KeyType
    - name: keyBits
      type: $KeyBits
    - name: managedKeyName
      type: String
    - name: managedKeyId
      type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $KeyInfo


- name: importKey
  method: POST
  path: keys/import
  bodyFrom: [pemBundle, keyName]
  parameters:
  - name: pemBundle
    type: String
  - name: keyName
    type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $KeyInfo


- name: readKey
  method: GET
  path: key/:keyRef
  parameters:
  - name: keyRef
    type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $KeyInfo


- name: updateKey
  method: POST
  path: key/:keyRef
  parameters:
  - name: keyRef
    type: String
  - name: params
    body: true
    object:
    - name: keyName
      type: String
  result:
    kind: leased
    unwrapData: true
    dataType: $KeyInfo


- name: deleteKey
  method: DELETE
  path: key/:keyRef
  parameters:
  - name: keyRef
    type: String


- name: deleteAll
  method: DELETE
  path: root


types:

- name: GenerateRootResultData
  properties:
  - name: certificate
    type: String
  - name: expiration
    type: java.time.OffsetDateTime
  - name: serialNumber
    type: String
  - name: issuingCa
    type: String
  - name: issuerId
    type: String
  - name: issuerName
    type: String
  - name: keyId
    type: String
  - name: keyName
    type: String
  - name: privateKey
    type: String
  - name: privateKeyType
    type: $KeyType


- name: GenerateRootParams
  properties:
  - name: issuerName
    type: String
  - name: keyName
    type: String
  - name: keyRef
    type: String
  - name: commonName
    type: String
  - name: altNames
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ipSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: uriSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: otherSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ttl
    type: java.time.Duration
  - name: format
    type: $Format
  - name: privateKeyFormat
    type: $PrivateKeyFormat
  - name: keyType
    type: $KeyType
  - name: keyBits
    type: $KeyBits
  - name: maxPathLength
    type: Integer
  - name: excludeCommonNameFromSubjectAlternativeNames
    serializedName: exclude_cn_from_sans
    type: Boolean
  - name: permittedDnsDomains
    type: java.util.List<String>
  - name: ou
    type: java.util.List<String>
  - name: organization
    type: java.util.List<String>
  - name: country
    type: java.util.List<String>
  - name: locality
    type: java.util.List<String>
  - name: province
    type: java.util.List<String>
  - name: streetAddress
    type: java.util.List<String>
  - name: postalCode
    type: java.util.List<String>
  - name: serialNumber
    type: String
  - name: notBefore
    serializedName: notBeforeDuration
    type: java.time.Duration
  - name: notAfter
    type: java.time.OffsetDateTime
  - name: managedKeyName
    type: String
  - name: managedKeyId
    type: String


- name: ImportResultData
  properties:
  - name: importedIssuers
    type: java.util.List<String>
  - name: importedKeys
    type: java.util.List<String>
  - name: mapping
    type: java.util.Map<String, String>
  - name: existingIssuers
    type: java.util.List<String>
  - name: existingKeys
    type: java.util.List<String>


- name: GenerateCsrResultData
  properties:
  - name: csr
    type: String
  - name: privateKey
    type: String
  - name: privateKeyType
    type: $KeyType

- name: GenerateCsrParams
  properties:
  - name: commonName
    type: String
  - name: altNames
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ipSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: uriSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: otherSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: format
    type: $Format
  - name: privateKeyFormat
    type: $PrivateKeyFormat
  - name: keyType
    type: $KeyType
  - name: keyBits
    type: $KeyBits
  - name: keyRef
    type: String
  - name: signatureBits
    type: $SignatureBits
  - name: excludeCommonNameFromSubjectAlternativeNames
    serializedName: exclude_cn_from_sans
    type: Boolean
  - name: ou
    type: java.util.List<String>
  - name: organization
    type: java.util.List<String>
  - name: country
    type: java.util.List<String>
  - name: locality
    type: java.util.List<String>
  - name: province
    type: java.util.List<String>
  - name: streetAddress
    type: java.util.List<String>
  - name: postalCode
    type: java.util.List<String>
  - name: serialNumber
    type: String
  - name: addBasicConstraints
    type: Boolean
  - name: managedKeyName
    type: String
  - name: managedKeyId
    type: String


- name: IssueParams
  properties:
  - name: commonName
    type: String
  - name: altNames
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ipSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: uriSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: otherSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ttl
    type: java.time.Duration
  - name: format
    type: $Format
  - name: privateKeyFormat
    type: $PrivateKeyFormat
  - name: excludeCommonNameFromSubjectAlternativeNames
    serializedName: exclude_cn_from_sans
    type: Boolean
  - name: notAfter
    type: java.time.OffsetDateTime
  - name: removeRootsFromChain
    type: Boolean
  - name: userIds
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer


- name: IssueResultData
  properties:
  - name: expiration
    type: java.time.OffsetDateTime
  - name: certificate
    type: String
  - name: issuingCa
    type: String
  - name: caChain
    type: java.util.List<String>
  - name: privateKey
    type: String
  - name: privateKeyType
    type: $KeyType
  - name: serialNumber
    type: String


- name: SignParams
  properties:
  - name: csr
    type: String
  - name: commonName
    type: String
  - name: altNames
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ipSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: uriSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: otherSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ttl
    type: java.time.Duration
  - name: format
    type: $Format
  - name: excludeCommonNameFromSubjectAlternativeNames
    serializedName: exclude_cn_from_sans
    type: Boolean
  - name: notAfter
    type: java.time.OffsetDateTime
  - name: removeRootsFromChain
    type: Boolean
  - name: userIds
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer


- name: SignIntermediateParams
  properties:
  - name: csr
    type: String
  - name: commonName
    type: String
  - name: altNames
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ipSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: uriSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: otherSans
    type: java.util.List<String>
    annotations:
    - type: com.fasterxml.jackson.databind.annotation.JsonSerialize
      members:
        using:
          format: $serializer:T.class
          arguments:
            serializer: <type>io.quarkus.vault.client.json.ListToCommaStringSerializer
  - name: ttl
    type: java.time.Duration
  - name: format
    type: $Format
  - name: maxPathLength
    type: Integer
  - name: excludeCommonNameFromSubjectAlternativeNames
    serializedName: exclude_cn_from_sans
    type: Boolean
  - name: useCsrValues
    type: Boolean
  - name: permittedDnsDomains
    type: java.util.List<String>
  - name: ou
    type: java.util.List<String>
  - name: organization
    type: java.util.List<String>
  - name: country
    type: java.util.List<String>
  - name: locality
    type: java.util.List<String>
  - name: province
    type: java.util.List<String>
  - name: streetAddress
    type: java.util.List<String>
  - name: postalCode
    type: java.util.List<String>
  - name: serialNumber
    type: String
  - name: notBefore
    serializedName: notBeforeDuration
    type: java.time.Duration
  - name: notAfter
    type: java.time.OffsetDateTime
  - name: signatureBits
    type: $SignatureBits
  - name: skid
    type: String
  - name: usePss
    type: Boolean


- name: SignVerbatimParams
  properties:
  - name: csr
    type: String
  - name: keyUsage
    type: java.util.List<$KeyUsage>
  - name: extKeyUsage
    type: java.util.List<$ExtKeyUsage>
  - name: extKeyUsageOids
    type: java.util.List<String>
  - name: ttl
    type: java.time.Duration
  - name: format
    type: $Format
  - name: notAfter
    type: java.time.OffsetDateTime
  - name: signatureBits
    type: $SignatureBits
  - name: usePss
    type: Boolean
  - name: removeRootsFromChain
    type: Boolean
  - name: userIds
    type: java.util.List<String>


- name: SignResultData
  properties:
  - name: expiration
    type: java.time.OffsetDateTime
  - name: certificate
    type: String
  - name: issuingCa
    type: String
  - name: caChain
    type: java.util.List<String>
  - name: privateKey
    type: String
  - name: privateKeyType
    type: $KeyType
  - name: serialNumber
    type: String


- name: KeyInfo
  properties:
  - name: keyId
    type: String
  - name: keyName
    type: String
  - name: keyType
    type: $KeyType


enums:

- name: Format
  values:
  - pem
  - der
  - pem_bundle

- name: PrivateKeyFormat
  values:
  - der
  - pkcs8

- name: KeyUsage
  values:
  - DigitalSignature
  - ContentCommitment
  - KeyEncipherment
  - DataEncipherment
  - KeyAgreement
  - CertSign
  - CRLSign
  - EncipherOnly
  - DecipherOnly

- name: ExtKeyUsage
  values:
  - ServerAuth
  - ClientAuth
  - CodeSigning
  - EmailProtection
  - IPSECEndSystem
  - IPSECTunnel
  - IPSECUser
  - TimeStamping
  - OCSPSigning
  - MicrosoftServerGatedCrypto
  - NetscapeServerGatedCrypto
  - MicrosoftCommercialCodeSigning
  - MicrosoftKernelCodeSigning

- name: KeyType
  values:
  - rsa
  - ec
  - ed25519

- name: CommonNameValidation
  values:
  - email
  - hostname

- name: ManageType
  values:
  - internal
  - exported
  - existing
  - kms
