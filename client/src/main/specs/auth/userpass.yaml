name: UserPass
category: auth
traceNameTag: user/pass
basePath: auth

operations:

- name: login
  method: POST
  path: login/:username
  authenticated: false
  bodyFrom: [password]
  parameters:
  - name: username
    type: String
  - name: password
    type: String
  result:
    kind: leased
    unwrapAuth: true
    auth:
    - name: metadata
      type: String


- name: updateUser
  method: POST
  path: "users/:username"
  parameters:
  - name: username
    type: String
  - name: params
    body: true
    object:
    - name: password
      type: String
    - name: tokenTtl
      type: String
    - name: tokenMaxTtl
      type: String
    - name: tokenPolicies
      type: java.util.List<String>
    - name: tokenBoundCidrs
      type: java.util.List<String>
    - name: tokenExplicitMaxTtl
      type: String
    - name: tokenNoDefaultPolicy
      type: Boolean
    - name: tokenNumUses
      type: Integer
    - name: tokenPeriod
      type: Integer
    - name: tokenType
      type: String


- name: readUser
  method: GET
  path: "users/:username"
  parameters:
  - name: username
    type: String
  result:
    kind: leased
    unwrapData: true
    data:
    - name: bindSecretId
      type: Boolean
    - name: secretIdBoundCidrs
      type: java.util.List<String>
    - name: secretIdNumUses
      type: Integer
    - name: secretIdTtl
      type: String
    - name: localSecretIds
      type: Boolean
    - name: tokenTtl
      type: String
    - name: tokenMaxTtl
      type: String
    - name: tokenPolicies
      type: java.util.List<String>
    - name: tokenBoundCidrs
      type: java.util.List<String>
    - name: tokenExplicitMaxTtl
      type: String
    - name: tokenNoDefaultPolicy
      type: Boolean
    - name: tokenNumUses
      type: Integer
    - name: tokenPeriod
      type: Integer
    - name: tokenType
      type: String


- name: deleteUser
  method: DELETE
  path: "users/:username"
  parameters:
  - name: username
    type: String


- name: updateUserPassword
  method: POST
  path: "users/:username/password"
  bodyFrom: [password]
  parameters:
  - name: username
    type: String
  - name: password
    type: String


- name: updateUserPolicies
  method: POST
  path: "users/:username/policies"
  bodyFrom: [tokenPolicies]
  parameters:
  - name: username
    type: String
  - name: tokenPolicies
    type: java.util.List<String>


- name: listUsers
  method: LIST
  path: "users"
  result:
    kind: leased
    unwrapUsing: r.getData().getKeys()
    unwrappedType: java.util.List<String>
    data:
    - name: keys
      type: java.util.List<String>
